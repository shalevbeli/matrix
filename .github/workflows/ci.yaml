name: Docker CI
on:
  push:
    branches: [ "main" ]
    
jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Client Tests
    steps:
    - name: Check out files
      uses: actions/checkout@v4
                  
    - name: Setup Node.js environment          
      uses: actions/setup-node@v4.1.0
      with: 
        node-version: 20
    
    - name: Install Dependencies
      working-directory: ./flask-client
      run: npm install

    - name: Run Tests
      working-directory: ./flask-client
      run: npm test 

    # Server Tests
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9.20'

    - name: Install Server Dependencies
      working-directory: ./Server
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Server Tests
      working-directory: ./Server
      run: pytest 

  build:
    runs-on: ubuntu-latest
    needs: tests
    strategy:
      matrix:
        folder: ["./flask-client", "./Server"]
        image: ["client", "server"]
        exclude:
          - folder: "./flask-client"
            image: "server"
          - folder: "./Server"
            image: "client"
        
    steps: 
    - name: Check out files
      uses: actions/checkout@v4

    # Build both images using matrix.
    - name: Build the client image
      working-directory: ${{ matrix.folder }}
      run: docker build . --file Dockerfile --tag shalevbeli/${{ matrix.image }}:{{ steps.meta.outputs.tags }}

    - name: Login to docker hub
      uses: docker/login-action@v3.3.0
      with: 
        username: shalevbeli
        password: ${{ secrets.docker_pass }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: "shalevbeli/${{ matrix.image }}"
    
    - name: Pushing the image to the repository
      uses: docker/build-push-action@v6.7.0 
      with:
        context: .
        file: ./${{ matrix.folder }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

      
      