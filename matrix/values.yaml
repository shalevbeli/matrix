# Default values for matrix.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: "matrix"

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the client arguments
client:
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: shalevbeli/client
    tag: "latest"

  envFrom:
  - secretRef:
        name: clientkv

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the target port that the pod is using
    targetPort: 80
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 80

# This sets the server arguments
server: 
  envFrom:
  - secretRef:
        name: serverkv
  image:
    repository: shalevbeli/server
    tag: "latest"
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the target port that the pod is using
    targetPort: 5000
    #This sets the nodePort later to be used via ingress resource
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 5000

mongo:
  envFrom:
  - secretRef:
      name: mongodbkv
  serviceName: "mongo-service"
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the target port that the pod is using
    targetPort: 27017
    #This sets the nodePort later to be used via ingress resource
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 27017
  image:
    repository: mongo
    tag: "latest"
  volumeMounts:
  - name: mongo-pvc
    mountPath: "/data/db"
  volumeClaimTemplates:
  - metadata:
      name: mongo-pvc
    spec: 
      accessModes: 
      - "ReadWriteOnce"
      resources:
        requests:
          storage: 1Gi

mongocompass:
  envFrom:
  - secretRef:
        name: mongocompasskv
  image: 
    repository: mongo-express
    tag: "latest"
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: NodePort
    # This sets the target port that the pod is using
    targetPort: 8081
    #This sets the nodePort later to be used via ingress resource
    nodePort: 30100
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 8081
# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000



# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

clusterissuer:
  name: selfsigned-issuer